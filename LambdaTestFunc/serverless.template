{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform" : "AWS::Serverless-2016-10-31",
  "Description" : "LambdaTestFunc that uses the ASP.NET Core framework running in Amazon Lambda.",

  "Parameters" : {
    "ApiGatewayId" : {
      "Type" : "String",
	  "Default" : "xxx",
      "Description" : "Api gateway id"
    },
	"ApiGatewayRootResourceId" : {
      "Type" : "String",
	  "Default" : "xxx",
      "Description" : "Api gateway root resource id"
    }
  },

  "Resources" : {

	

    "ProxyFunction" : {
	  "Type" : "AWS::Serverless::Function",
      
	  "Properties": {
		"FunctionName" : "ToDoLambdaFunc",
        "Description" : "Todo serverless lambda function",
        
		"Handler": "LambdaTestFunc::LambdaTestFunc.LambdaEntryPoint::FunctionHandlerAsync",
        "Runtime": "dotnetcore2.0",
        "CodeUri": "",
        "MemorySize": 128,
        "Timeout": 30,
        "Role": null,
        "Policies": [ "AWSLambdaBasicExecutionRole" ]
      }
    },


	"Api": {
		"Type": "AWS::ApiGateway::RestApi",
		"Properties": {
			"Name" : "ToDoLambdaFuncApi"
		}
	},

	"ApiResource": {
		"Type": "AWS::ApiGateway::Resource",
		"Properties":
		{
			"ParentId": {"Fn::GetAtt" : [ "Api", "RootResourceId"]},
            "RestApiId" : { "Ref" : "Api" },
            "PathPart" : "{proxy+}"
		}
	},

	"LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {"Fn::GetAtt": ["ProxyFunction", "Arn"]},
		"Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "Api"}, "/*"]]}
      }
    },

	"ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": { "Service": ["apigateway.amazonaws.com"] },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Policies": [{
          "PolicyName": "ApiGatewayLogsPolicy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:GetLogEvents",
                "logs:FilterLogEvents"
              ],
              "Resource": "*"
            }]
          }
        }]
      }
    },

	"ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {"Fn::GetAtt": ["ApiGatewayCloudWatchLogsRole", "Arn"] }
      }
    },
	
	"ApiMethod": {
		"DependsOn": "LambdaPermission",
		"Type": "AWS::ApiGateway::Method",
		"Properties":
		{
			"HttpMethod" : "ANY",
			"ResourceId": { "Ref" : "ApiResource" },
			"RestApiId": { "Ref" : "Api" },
			"AuthorizationType" : "AWS_IAM",
            "Integration" : {
				"Type" : "AWS_PROXY",
				"IntegrationHttpMethod": "POST",
                "Uri" : {"Fn::Join": ["",
							["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["ProxyFunction", "Arn"]}, "/invocations"]
						]}
			}
		}
	},

	"ApiStage": {
	  "DependsOn": ["ApiGatewayAccount"],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {"Ref": "ApiDeployment"},
        "RestApiId": {"Ref": "Api"},
        "StageName": "prod"
      }
    },

	"ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["ApiMethod"],
      "Properties": {
        "RestApiId": {"Ref": "Api"},
        "StageName": "dummy"
      }
    }

  },

  "Outputs" : {
    "ApiGateId" : {
        "Value" : { "Ref" : "Api" }
    },
	"RootResourceId": {
		"Value": {"Fn::GetAtt" : [ "Api", "RootResourceId"]}
	}
  }

}